import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e}from"./app.f1d28472.js";const t={},p=e(`<h1 id="\u8054\u5408\u548C\u5B57\u9762\u91CF" tabindex="-1"><a class="header-anchor" href="#\u8054\u5408\u548C\u5B57\u9762\u91CF" aria-hidden="true">#</a> \u8054\u5408\u548C\u5B57\u9762\u91CF</h1><h2 id="\u8054\u5408\u7C7B\u578B-union" tabindex="-1"><a class="header-anchor" href="#\u8054\u5408\u7C7B\u578B-union" aria-hidden="true">#</a> \u8054\u5408\u7C7B\u578B union</h2><p>\u8054\u5408\u7C7B\u578B\uFF08Union Types\uFF09\u8868\u793A\u53D6\u503C\u53EF\u4EE5\u4E3A\u591A\u79CD\u7C7B\u578B\u4E2D\u7684\u4E00\u79CD\u3002</p><h3 id="\u7B80\u5355\u7684\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5355\u7684\u4F8B\u5B50" aria-hidden="true">#</a> \u7B80\u5355\u7684\u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> myFavoriteNumber<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
myFavoriteNumber <span class="token operator">=</span> <span class="token string">&#39;seven&#39;</span><span class="token punctuation">;</span>
myFavoriteNumber <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> myFavoriteNumber<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
myFavoriteNumber <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

<span class="token comment">// error: Type &#39;boolean&#39; is not assignable to type &#39;string | number&#39;.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8054\u5408\u7C7B\u578B\u4F7F\u7528 <code>|</code> \u5206\u9694\u6BCF\u4E2A\u7C7B\u578B\u3002</p><p>\u8FD9\u91CC\u7684 <code>let myFavoriteNumber: string | number</code> \u7684\u542B\u4E49\u662F\uFF0C\u5141\u8BB8 <code>myFavoriteNumber</code> \u7684\u7C7B\u578B\u662F <code>string</code> \u6216\u8005 <code>number</code>\uFF0C\u4F46\u662F\u4E0D\u80FD\u662F\u5176\u4ED6\u7C7B\u578B\u3002</p><h3 id="\u8BBF\u95EE\u8054\u5408\u7C7B\u578B\u7684\u5C5E\u6027\u6216\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8BBF\u95EE\u8054\u5408\u7C7B\u578B\u7684\u5C5E\u6027\u6216\u65B9\u6CD5" aria-hidden="true">#</a> \u8BBF\u95EE\u8054\u5408\u7C7B\u578B\u7684\u5C5E\u6027\u6216\u65B9\u6CD5</h3><p>\u5F53 TypeScript \u4E0D\u786E\u5B9A\u4E00\u4E2A\u8054\u5408\u7C7B\u578B\u7684\u53D8\u91CF\u5230\u5E95\u662F\u54EA\u4E2A\u7C7B\u578B\u7684\u65F6\u5019\uFF0C\u6211\u4EEC<strong>\u53EA\u80FD\u8BBF\u95EE\u6B64\u8054\u5408\u7C7B\u578B\u7684\u6240\u6709\u7C7B\u578B\u91CC\u5171\u6709\u7684\u5C5E\u6027\u6216\u65B9\u6CD5</strong>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">getLength</span><span class="token punctuation">(</span>something<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> something<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// error: Property &#39;length&#39; does not exist on type &#39;string | number&#39;.</span>
<span class="token comment">//   Property &#39;length&#39; does not exist on type &#39;number&#39;.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u4F8B\u4E2D\uFF0C<code>length</code> \u4E0D\u662F <code>string</code> \u548C <code>number</code> \u7684\u5171\u6709\u5C5E\u6027\uFF0C\u6240\u4EE5\u4F1A\u62A5\u9519\u3002</p><p>\u8BBF\u95EE <code>string</code> \u548C <code>number</code> \u7684\u5171\u6709\u5C5E\u6027\u662F\u6CA1\u95EE\u9898\u7684\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">getString</span><span class="token punctuation">(</span>something<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> something<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8054\u5408\u7C7B\u578B\u7684\u53D8\u91CF\u5728\u88AB\u8D4B\u503C\u7684\u65F6\u5019\uFF0C\u4F1A\u6839\u636E<strong>\u7C7B\u578B\u63A8\u8BBA</strong>\u7684\u89C4\u5219\u63A8\u65AD\u51FA\u4E00\u4E2A\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> myFavoriteNumber<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
myFavoriteNumber <span class="token operator">=</span> <span class="token string">&#39;seven&#39;</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myFavoriteNumber<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>
myFavoriteNumber <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myFavoriteNumber<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7F16\u8BD1\u65F6\u62A5\u9519</span>

<span class="token comment">// error: Property &#39;length&#39; does not exist on type &#39;number&#39;.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u4F8B\u4E2D\uFF0C\u7B2C\u4E8C\u884C\u7684 <code>myFavoriteNumber</code> \u88AB\u63A8\u65AD\u6210\u4E86 <code>string</code>\uFF0C\u8BBF\u95EE\u5B83\u7684 <code>length</code> \u5C5E\u6027\u4E0D\u4F1A\u62A5\u9519\u3002</p><p>\u800C\u7B2C\u56DB\u884C\u7684 <code>myFavoriteNumber</code> \u88AB\u63A8\u65AD\u6210\u4E86 <code>number</code>\uFF0C\u8BBF\u95EE\u5B83\u7684 <code>length</code> \u5C5E\u6027\u65F6\u5C31\u62A5\u9519\u4E86\u3002</p><blockquote><p>\u7C7B\u578B\u63A8\u8BBA\uFF1A\u5982\u679C\u6CA1\u6709\u660E\u786E\u7684\u6307\u5B9A\u7C7B\u578B\uFF0C\u90A3\u4E48 TypeScript \u4F1A\u4F9D\u7167\u7C7B\u578B\u63A8\u8BBA\uFF08Type Inference\uFF09\u7684\u89C4\u5219\u63A8\u65AD\u51FA\u4E00\u4E2A\u7C7B\u578B\u3002</p><ul><li>TypeScript \u4F1A\u5728\u6CA1\u6709\u660E\u786E\u7684\u6307\u5B9A\u7C7B\u578B\u7684\u65F6\u5019\uFF0C\u6839\u636E\u5B9A\u4E49\u65F6\u7684\u8D4B\u503C\uFF0C\u63A8\u6D4B\u51FA\u4E00\u4E2A\u7C7B\u578B\uFF0C\u8FD9\u5C31\u662F\u7C7B\u578B\u63A8\u8BBA\u3002</li><li>\u5982\u679C\u5B9A\u4E49\u7684\u65F6\u5019\u6CA1\u6709\u8D4B\u503C\uFF0C\u4E0D\u7BA1\u4E4B\u540E\u6709\u6CA1\u6709\u8D4B\u503C\uFF0C\u90FD\u4F1A\u88AB\u63A8\u65AD\u6210 any \u7C7B\u578B\u800C\u5B8C\u5168\u4E0D\u88AB\u7C7B\u578B\u68C0\u67E5\u3002</li></ul></blockquote><h2 id="\u5B57\u9762\u91CF\u7C7B\u578B-literal" tabindex="-1"><a class="header-anchor" href="#\u5B57\u9762\u91CF\u7C7B\u578B-literal" aria-hidden="true">#</a> \u5B57\u9762\u91CF\u7C7B\u578B literal</h2><p>\u5B57\u9762\u91CF\u7C7B\u578B\uFF08Literal Types\uFF09\u8868\u793A\u7279\u5B9A\u6570\u636E\u5C31\u662F\u53D8\u91CF\u7684\u7C7B\u578B\u3002</p><h3 id="\u7B80\u5355\u7684\u4F8B\u5B50-1" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5355\u7684\u4F8B\u5B50-1" aria-hidden="true">#</a> \u7B80\u5355\u7684\u4F8B\u5B50</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> number3 <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u58F0\u660E\u7684\u53D8\u91CF <code>number3</code>\uFF0C\u5B83\u7684\u7C7B\u578B\u5E76\u4E0D\u662F <code>number</code>\uFF0C\u800C\u662F\u6570\u5B57 <code>3</code>\u3002</p><h3 id="\u6DF7\u5408\u4F7F\u7528\u4E0D\u540C\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6DF7\u5408\u4F7F\u7528\u4E0D\u540C\u7C7B\u578B" aria-hidden="true">#</a> \u6DF7\u5408\u4F7F\u7528\u4E0D\u540C\u7C7B\u578B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> literal <span class="token operator">:</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token string">&#39;2&#39;</span> <span class="token operator">|</span> <span class="token boolean">true</span> <span class="token operator">|</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u58F0\u660E\u628A\u5B57\u9762\u91CF\u7C7B\u578B\u548C\u8054\u5408\u7C7B\u578B\u6DF7\u5408\u4F7F\u7528\uFF0C<code>literal</code> \u7684\u503C\u53EA\u80FD\u662F\u8FD9\u56DB\u4E2A\u503C\u4E4B\u4E00\u3002</p><h3 id="\u8054\u5408\u7C7B\u578B\u4E0E\u5B57\u9762\u91CF\u7C7B\u578B\u6DF7\u7528\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u8054\u5408\u7C7B\u578B\u4E0E\u5B57\u9762\u91CF\u7C7B\u578B\u6DF7\u7528\u5B9E\u4F8B" aria-hidden="true">#</a> \u8054\u5408\u7C7B\u578B\u4E0E\u5B57\u9762\u91CF\u7C7B\u578B\u6DF7\u7528\u5B9E\u4F8B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">merge</span><span class="token punctuation">(</span>
  num1<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  num2<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  resultType<span class="token operator">:</span> <span class="token string">&#39;as-number&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;as-string&#39;</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>resultType <span class="token operator">===</span> <span class="token string">&#39;as-string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> num1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> num2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> num1 <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> num2 <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> num1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> num2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> num1 <span class="token operator">+</span> num2<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> mergeNumer1 <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;as-number&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> mergeNumer2 <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;as-string&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> mergeString <span class="token operator">=</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;as-string&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mergeNumer1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 7</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mergeNumer2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;25&#39;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mergeString<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;helloworld&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u4EE3\u7801\u4E2D\uFF0C<code>merge</code> \u51FD\u6570\u7684\u7B2C\u4E09\u4E2A\u53C2\u6570 <code>resultType</code> \u662F\u4E00\u4E2A\u5B57\u9762\u91CF\u7C7B\u578B\uFF0C\u5B83\u5B9A\u4E49\u4E3A\u4E24\u4E2A\u5B57\u7B26\u4E32\u503C\u3002\u6839\u636E <code>resultType</code> \u4E24\u79CD\u7279\u6B8A\u7684\u53D6\u503C\u5C06\u8F93\u51FA\u4E24\u79CD\u4E0D\u540C\u7684\u7ED3\u679C\u3002</p>`,30),o=[p];function c(i,l){return s(),a("div",null,o)}var d=n(t,[["render",c],["__file","union-and-literal.html.vue"]]);export{d as default};
