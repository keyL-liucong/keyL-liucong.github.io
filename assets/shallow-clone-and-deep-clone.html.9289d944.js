import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as i,c as u,a as n,b as a,w as e,e as t,d as s}from"./app.a25def55.js";const r={},k=t('<h1 id="\u6D45\u514B\u9686\u4E0E\u6DF1\u514B\u9686" tabindex="-1"><a class="header-anchor" href="#\u6D45\u514B\u9686\u4E0E\u6DF1\u514B\u9686" aria-hidden="true">#</a> \u6D45\u514B\u9686\u4E0E\u6DF1\u514B\u9686</h1><h2 id="\u524D\u8A00" tabindex="-1"><a class="header-anchor" href="#\u524D\u8A00" aria-hidden="true">#</a> \u524D\u8A00</h2><p><strong>\u6D45\u514B\u9686</strong>\uFF1A\u6D45\u514B\u9686\u53EA\u662F\u62F7\u8D1D\u57FA\u672C\u7C7B\u578B\u6570\u636E\u3002\u5BF9\u4E8E\u5F15\u7528\u7C7B\u578B\u6570\u636E\uFF0C\u662F\u5C06\u6808\u5185\u5B58\u4E2D\u7684\u5F15\u7528\u590D\u5236\u4E00\u4EFD\uFF0C\u8D4B\u7ED9\u4E00\u4E2A\u65B0\u7684\u53D8\u91CF\uFF0C\u672C\u8D28\u4E0A\u4E24\u4E2A\u6307\u5411\u5806\u5185\u5B58\u4E2D\u7684\u540C\u4E00\u5730\u5740\uFF0C\u5185\u5BB9\u4E5F\u76F8\u540C\uFF0C\u5176\u4E2D\u4E00\u4E2A\u53D8\u5316\u53E6\u4E00\u4E2A\u5185\u5BB9\u4E5F\u4F1A\u53D8\u5316\u3002</p><p><strong>\u6DF1\u514B\u9686</strong>\uFF1A\u5C31\u662F\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u7A7A\u5BF9\u8C61\uFF0C\u5F00\u8F9F\u4E00\u5757\u5185\u5B58\uFF0C\u7136\u540E\u5C06\u539F\u5BF9\u8C61\u4E2D\u7684\u6570\u636E\u5168\u90E8\u590D\u5236\u8FC7\u53BB\uFF0C\u5B8C\u5168\u5207\u65AD\u4E24\u4E2A\u5BF9\u8C61\u95F4\u7684\u8054\u7CFB\u3002\u65B0\u5BF9\u8C61\u8DDF\u539F\u5BF9\u8C61\u4E0D\u5171\u4EAB\u5185\u5B58\uFF0C\u4FEE\u6539\u65B0\u5BF9\u8C61\u4E0D\u4F1A\u6539\u5230\u539F\u5BF9\u8C61\u3002</p><p><strong>\u533A\u522B</strong>\uFF1A\u6D45\u514B\u9686\u548C\u6DF1\u514B\u9686\u6700\u5927\u7684\u533A\u522B\u5C31\u662F\u5BF9\u5F15\u7528\u503C\u7684\u5904\u7406\u4E86\uFF0C\u5373\u6D45\u514B\u9686\u4E4B\u540E<strong>\u4F60\u6539\u6211\u4E5F\u6539</strong>\uFF0C\u6DF1\u514B\u9686\u4E4B\u540E<strong>\u4F60\u6539\u6211\u4E0D\u6539</strong>\u3002</p><p><strong>\u57FA\u672C\u7C7B\u578B\u6570\u636E</strong>\uFF1A\u4FDD\u5B58\u5728\u6808\uFF08stack\uFF09\u5185\u5B58\u3002</p><p><strong>\u5F15\u7528\u7C7B\u578B\u6570\u636E</strong>\uFF1A\u4FDD\u5B58\u5728\u5806\uFF08heap\uFF09\u5185\u5B58\u3002</p><h2 id="\u6D45\u514B\u9686\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#\u6D45\u514B\u9686\u6982\u5FF5" aria-hidden="true">#</a> \u6D45\u514B\u9686\u6982\u5FF5</h2><p>\u5728\u6D45\u514B\u9686\u4E2D\uFF0C\u539F\u59CB\u503C\u7684\u514B\u9686\u6CA1\u95EE\u9898\uFF0C\u53EA\u662F\u503C\u7684\u62F7\u8D1D\uFF0C\u4E0D\u4F1A\u51FA\u73B0\u4F60\u6539\u6211\u6539\u7684\u95EE\u9898\u3002\u4F46\u662F\u5F15\u7528\u503C\u7684\u514B\u9686\uFF0C\u5C31\u4F1A\u51FA\u73B0\u4F60\u6539\u6211\u4E5F\u6539\u7684\u95EE\u9898\uFF0C\u56E0\u4E3A\u6D45\u5C42\u514B\u9686\u7684\u662F\u5730\u5740\uFF0C\u5373\u6307\u5411\u7684\u662F\u540C\u4E00\u7A7A\u95F4\u3002</p>',9),d=s("\u624B\u5199\u5B9E\u73B0\u6D45\u514B\u9686"),v=n("h2",{id:"\u6DF1\u514B\u9686\u6982\u5FF5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6DF1\u514B\u9686\u6982\u5FF5","aria-hidden":"true"},"#"),s(" \u6DF1\u514B\u9686\u6982\u5FF5")],-1),b=n("p",null,"\u8FDB\u884C\u6DF1\u514B\u9686\u4E4B\u540E\uFF0C\u5BF9\u4E8E\u5F15\u7528\u503C\u7684\u514B\u9686\u95EE\u9898\u5C31\u80FD\u89E3\u51B3\u4E86\uFF0C\u56E0\u4E3A\u5728\u6DF1\u514B\u9686\u4E4B\u540E\uFF0C\u503C\u5404\u81EA\u72EC\u7ACB\uFF0C\u4E92\u4E0D\u5F71\u54CD\u3002",-1),m=s("\u624B\u5199\u5B9E\u73B0\u6DF1\u514B\u9686"),h=t(`<h2 id="\u5E94\u7528\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u5E94\u7528\u5B9E\u4F8B" aria-hidden="true">#</a> \u5E94\u7528\u5B9E\u4F8B</h2><h3 id="\u6D45\u514B\u9686\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6D45\u514B\u9686\u65B9\u6CD5" aria-hidden="true">#</a> \u6D45\u514B\u9686\u65B9\u6CD5</h3><ul><li><p>\u76F4\u63A5\u8D4B\u503C</p></li><li><p>\u624B\u5199\uFF08\u53EA\u62F7\u8D1D\u5BF9\u8C61\u6216\u6570\u7EC4\u7684\u7B2C\u4E00\u5C42\u5185\u5BB9\uFF09</p></li><li><p>\u6570\u7EC4\u7684 <code>Array.concat()</code>\uFF1A</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> oldArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;three&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> newArr <span class="token operator">=</span> oldArr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
newArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;four&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oldArr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;one&quot;, &quot;two&quot;, &quot;three&quot;]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newArr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6570\u7EC4\u7684 <code>Array.slice()</code>\uFF1A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> oldArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;three&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> newArr <span class="token operator">=</span> oldArr<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
newArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;four&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oldArr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;one&quot;, &quot;two&quot;, &quot;three&quot;]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newArr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5BF9\u8C61\u7684 <code>Object.assign()</code>\uFF1A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> oldObj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token string">&#39;three&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> newObj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> oldObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
newObj<span class="token punctuation">.</span>d <span class="token operator">=</span> <span class="token string">&#39;four&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {a: &quot;one&quot;, b: &quot;two&quot;, c: &quot;three&quot;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newObj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {a: &quot;one&quot;, b: &quot;two&quot;, c: &quot;three&quot;, d: &quot;four&quot;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6570\u7EC4\u548C\u5BF9\u8C61\u7684\u89E3\u6784\u8D4B\u503C\uFF1A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> oldObj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token string">&#39;two&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token string">&#39;three&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> newObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">...</span>oldObj<span class="token punctuation">}</span><span class="token punctuation">;</span>
newObj<span class="token punctuation">.</span>d <span class="token operator">=</span> <span class="token string">&#39;four&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {a: &quot;one&quot;, b: &quot;two&quot;, c: &quot;three&quot;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newObj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {a: &quot;one&quot;, b: &quot;two&quot;, c: &quot;three&quot;, d: &quot;four&quot;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6DF1\u514B\u9686\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u514B\u9686\u65B9\u6CD5" aria-hidden="true">#</a> \u6DF1\u514B\u9686\u65B9\u6CD5</h3>`,11),g=n("li",null,[n("p",null,"\u624B\u5199\uFF08\u5C42\u5C42\u62F7\u8D1D\u5BF9\u8C61\u6216\u6570\u7EC4\u7684\u6BCF\u4E00\u5C42\u5185\u5BB9\uFF09")],-1),y=n("p",null,[s("\u5C06\u6570\u7EC4\u548C\u5BF9\u8C61\u8F6C\u6210 JSON \u5B57\u7B26\u4E32\u518D\u8F6C\u56DE\u6765\uFF08"),n("code",null,"JSON.parse(JSON.stringify())"),s("\uFF09\uFF1A")],-1),q=n("code",null,"JSON.stringify() \u7684\u5C40\u9650\u6027",-1),f=s("\uFF1A\u5BF9\u4E8E RegExp \u7C7B\u578B\u548C Function \u7C7B\u578B\u65E0\u6CD5\u5B8C\u5168\u6EE1\u8DB3\uFF0C\u800C\u4E14\u4E0D\u652F\u6301\u6709\u5FAA\u73AF\u5F15\u7528\u7684\u5BF9\u8C61\u3002("),w={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#%E6%8F%8F%E8%BF%B0",target:"_blank",rel:"noopener noreferrer"},j=s("MDN"),_=s(")"),O=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> oldObj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">bb</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">bbb</span><span class="token operator">:</span> <span class="token string">&#39;two&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;three&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> newObj <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">.</span>b<span class="token punctuation">.</span>bb <span class="token operator">===</span> newObj<span class="token punctuation">.</span>b<span class="token punctuation">.</span>bb<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>jQuery \u6709\u63D0\u4F9B\u4E00\u4E2A <code>$.extend</code> \u53EF\u4EE5\u7528\u6765\u505A\u6DF1\u514B\u9686\uFF1A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> $ <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;jquery&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> oldObj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">bb</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">bbb</span><span class="token operator">:</span> <span class="token string">&#39;two&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;three&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> newObj <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> oldObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">.</span>b<span class="token punctuation">.</span>bb <span class="token operator">===</span> newObj<span class="token punctuation">.</span>b<span class="token punctuation">.</span>bb<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u51FD\u6570\u5E93 Lodash\uFF0C\u6709\u63D0\u4F9B <code>_.cloneDeep</code> \u7528\u6765\u505A\u6DF1\u514B\u9686\uFF1A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> _ <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;lodash&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> oldObj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;one&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">bb</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">bbb</span><span class="token operator">:</span> <span class="token string">&#39;two&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;three&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> newObj <span class="token operator">=</span> _<span class="token punctuation">.</span><span class="token function">cloneDeep</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">.</span>b<span class="token punctuation">.</span>bb <span class="token operator">===</span> newObj<span class="token punctuation">.</span>b<span class="token punctuation">.</span>bb<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function x(E,A){const p=o("RouterLink"),c=o("ExternalLinkIcon");return i(),u("div",null,[k,n("p",null,[a(p,{to:"/handwritten/javascript/%E5%AE%9E%E7%8E%B0%E6%B5%85%E5%85%8B%E9%9A%86-shallow-clone/"},{default:e(()=>[d]),_:1})]),v,b,n("p",null,[a(p,{to:"/handwritten/javascript/%E5%AE%9E%E7%8E%B0%E6%B7%B1%E5%85%8B%E9%9A%86-deep-clone/"},{default:e(()=>[m]),_:1})]),h,n("ul",null,[g,n("li",null,[y,n("ul",null,[n("li",null,[q,f,n("a",w,[j,a(c)]),_])])])]),O])}var S=l(r,[["render",x],["__file","shallow-clone-and-deep-clone.html.vue"]]);export{S as default};
